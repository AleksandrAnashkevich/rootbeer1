The Rootbeer GPU Compiler makes it easy to use Graphics Processing Units from
within Java.

Rootbeer is more advanced that CUDA or OpenCL Java Language Bindings. With 
bindings the developer must serialize complex graphs of objects into arrays
of primitive types. With Rootbeer this is done automatically. Also with language
bindings, the developer must write the GPU kernel in CUDA or OpenCL. With
Rootbeer a static analysis of the Java Bytecode is done (using Soot) and CUDA
code is automatically generated.

See doc/hpcc_rootbeer.pdf for the conference slides from HPCC-2012.

The license is currently GPL, but I am planning on changing to a more
permissive license. My overall goal is to get as many people using Rootbeer as
possible.

Rootbeer was created using Test Driven Development and testing is essentially
important in Rootbeer. Rootbeer is 20k lines of product for and 7k of test code
and all tests pass on both Windows and Linux. The Rootbeer test case suite 
covers every aspect of the Java Programming language except:
  1. native methods
  2. reflection
  3. dynamic method invocation
  4. sleeping while inside a monitor. 
  
This means that all of the familar Java code you have been writing can be
executed on the GPU

The original publication for Rootbeer was in HPCC-2012.
  "Rootbeer: Seamlessly using GPUs from Java"
  Philip C. Pratt-Szeliga, James W. Fawcett, Roy D. Welch.
  To appear in HPCC-2012.

This work is supported by the National Science Foundation.

Rootbeer is written by:
Phil Pratt-Szeliga
Syracuse University
pcpratts@chirrup.org
http://chirrup.org/
